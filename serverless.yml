---
service: bashkim-com

variablesResolutionMode: "20210326"

plugins:
  - serverless-plugin-tracing
  - serverless-jetpack

package:
  individually: true
  patterns:
    - "!**/node_modules/aws-sdk/**" # included on Lambda

custom:
  stage: ${opt:stage, env:APP_ENV, 'production'}
  region: ${opt:region, env:AWS_DEFAULT_REGION, 'eu-west-1'}

  app:
    git:
      commit: ${env:CIRCLE_SHA1, ''}

    sitemap:
      baseHref: ${env:APP_SITEMAP_BASE_HREF, ''}

    # socials-server:
    #   githubToken: ${env:APP_SOCIALS_SERVER_GITHUB_TOKEN, ''}
    #   redisHost: ${env:APP_SOCIALS_SERVER_REDIS_HOST, ''}
    #   stackOverflowUserId: ${env:APP_SOCIALS_SERVER_STACK_OVERFLOW_USER_ID, ''}

    prismic-webhooks:
      circleApiKey: ${env:APP_WEBHOOKS_CIRCLE_API_KEY, ''}
      circleProjectSlug: ${env:APP_WEBHOOKS_CIRCLE_PROJECT_SLUG, ''}
      prismicSecretKey: ${env:APP_WEBHOOKS_PRISMIC_SECRET_KEY, ''}

  jetpack:
    preInclude:
      - "!**/*"

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  memorySize: 512
  timeout: 15
  lambdaHashingVersion: "20201221"
  tracing: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  environment:
    APP_ENV: ${self:custom.stage}
    NODE_ENV: ${self:custom.stage}

functions:
  Sitemap:
    handler: packages/sitemap/dist/lambda.handler
    environment:
      APP_SITEMAP_BASE_HREF: ${self:custom.app.sitemap.baseHref}
    jetpack:
      roots:
        - "packages/sitemap"
      preInclude:
        - "packages/sitemap/dist/**"
    events:
      - http:
          method: GET
          path: /robots.txt
      - http:
          method: GET
          path: /sitemap.xml
      - http:
          method: GET
          path: /sitemap/{any+}
      - http:
          method: ANY
          path: /.well-known/sitemap/{any+}

  # SocialsServer:
  #   handler: packages/socials-server/dist/lambda.handler
  #   environment:
  #     APP_SOCIALS_SERVER_CACHE_DRIVER: "redis"
  #     APP_SOCIALS_SERVER_GITHUB_TOKEN: ${self:custom.app.socials-server.githubToken}
  #     APP_SOCIALS_SERVER_REDIS_HOST: ${self:custom.app.socials-server.redisHost}
  #     APP_SOCIALS_SERVER_STACK_OVERFLOW_USER_ID: ${self:custom.app.socials-server.stackOverflowUserId}
  #   jetpack:
  #     roots:
  #       - "packages/socials-server"
  #     preInclude:
  #       - "packages/socials-server/dist/**"
  #       - "packages/socials-server/schema/**"
  #   events:
  #     - http:
  #         method: ANY
  #         path: /api/v1/socials-server
  #     - http:
  #         method: ANY
  #         path: /api/v1/socials-server/{any+}
  #   vpc:
  #     securityGroupIds:
  #       - sg-01d85115e4890b3dc
  #     subnetIds:
  #       - subnet-070077b5cb19f7dc4 # private
  #       - subnet-01b6c34b3669e7a0b # public

  PrismicWebhooks:
    handler: packages/prismic-webhooks/dist/lambda.handler
    environment:
      APP_WEBHOOKS_CIRCLE_API_KEY: ${self:custom.app.prismic-webhooks.circleApiKey}
      APP_WEBHOOKS_CIRCLE_PROJECT_SLUG: ${self:custom.app.prismic-webhooks.circleProjectSlug}
      APP_WEBHOOKS_PRISMIC_SECRET_KEY: ${self:custom.app.prismic-webhooks.prismicSecretKey}
    jetpack:
      roots:
        - "packages/prismic-webhooks"
      preInclude:
        - "packages/prismic-webhooks/dist/**"
    events:
      - http:
          method: ANY
          path: /api/v1/prismic-webhooks/{any+}
      - http:
          method: ANY
          path: /.well-known/prismic-webhooks/{any+}
