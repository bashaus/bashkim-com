@mixin grid-container-padding(
  $breakpoints: null,
  $sides: (top, left, right, bottom)
) {
  @if (type-of($breakpoints) == "null") {
    @include grid-container-padding(
      $breakpoints: map-keys($grid),
      $sides: $sides
    );
  } @else if (type-of($breakpoints) == "map") {
    @include grid-container-padding(
      $breakpoints: map-keys($breakpoints),
      $sides: $sides
    );
  } @else if (type-of($breakpoints) == "list") {
    @each $breakpoint in $breakpoints {
      @include grid-container-padding(
        $breakpoints: $breakpoint,
        $sides: $sides
      );
    }
  } @else if (type-of($breakpoints) == "string") {
    $breakpoint: $breakpoints;

    @include breakpoint(grid-query($breakpoint)) {
      @if (index($sides, "top")) {
        padding-top: grid-margin($breakpoint) - (grid-gutter($breakpoint) / 2);
      }

      @if (index($sides, "left")) {
        padding-left: grid-margin($breakpoint) - (grid-gutter($breakpoint) / 2);
      }

      @if (index($sides, "right")) {
        padding-right: grid-margin($breakpoint) -
          (grid-gutter($breakpoint) / 2);
      }

      @if (index($sides, "bottom")) {
        padding-bottom: grid-margin($breakpoint) -
          (grid-gutter($breakpoint) / 2);
      }
    }
  } @else {
    @error "grid-container-padding( #{type-of($breakpoints)} ): "
            "$breakpoints received type #{type-of($breakpoints)}, "
            "expected `null`, `map`, `list` or `string`";
  }
}
