version: 2.1

executors:
  exec-node:
    working_directory: ~/repo
    docker:
      - image: node:10.17

  exec-python:
    working_directory: ~/repo
    docker:
      - image: 'circleci/python:3.6'

orbs:
  aws-s3: circleci/aws-s3@1.0.11
  # aws-serverless: circleci/aws-serverless@1.0.1

jobs:
  build:
    executor: exec-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-dependencies-{{ checksum "package-lock.json" }}

      - run: npm install
      - run: npm run build
      - run: npm run styleguide:build

      - save_cache:
          key: node-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./.next/cache

      - persist_to_workspace:
          root: ./
          paths:
            - ./.next
            - ./.storybook-static

  deploy:
    executor: exec-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-dependencies-{{ checksum "package-lock.json" }}
      - attach_workspace:
          at: ./

      - run: npm install -g serverless
      - run: serverless deploy

  synchronize:
    executor: exec-python
    steps:
      - checkout
      - attach_workspace:
          at: ./

      - aws-s3/sync:
          from: ./public/static
          to: 's3://${DEPLOY_S3_WEBSITE_BUCKET}/public/static'
          arguments: |
            --cache-control "max-age=86400"
          overwrite: true

      - aws-s3/sync:
          from: ./.next
          to: 's3://${DEPLOY_S3_WEBSITE_BUCKET}/_next'
          arguments: |
            --cache-control "max-age=86400"
          overwrite: true

      - aws-s3/sync:
          from: ./.storybook-static
          to: 's3://${DEPLOY_S3_STYLEGUIDE_BUCKET}/'
          arguments: |
            --cache-control "max-age=86400"
          overwrite: true

workflows:
  version: 2

  # development:
  #   jobs:
  #     - build:
  #         filters:
  #           branches:
  #             only:
  #               - develop

  #     - approve:
  #         type: approval
  #         requires:
  #           - build

  #     - deploy:
  #         context: bashkim-com-dev
  #         requires:
  #           - approve

  #     - synchronize:
  #         context: bashkim-com-dev
  #         requires:
  #           - deploy

  production:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master

      - approve:
          type: approval
          requires:
            - build

      - deploy:
          context: bashkim-com-prod
          requires:
            - approve

      - synchronize:
          context: bashkim-com-prod
          requires:
            - deploy
