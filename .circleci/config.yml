---
version: 2.1

executors:
  exec-node:
    docker:
      - image: cimg/node:18.15.0

  exec-python:
    docker:
      - image: cimg/python:3.11.1

orbs:
  aws-bucket: circleci/aws-s3@3.0.0

jobs:
  dependencies:
    executor: exec-node
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-lock-{{ checksum "yarn.lock" }}

      - run:
          name: yarn install
          command: |
            yarn install --frozen-lockfile

      - run:
          name: "nx prismic-dal generate"
          command: |
            yarn nx run prismic-dal:generate:production

      - save_cache:
          key: yarn-lock-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

      - persist_to_workspace:
          root: ./
          paths:
            - node_modules/
            - libs/prismic-dal/src/generated/

  build-serverless:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: "nx build sitemap"
          command: |
            yarn nx run sitemap:build:production

      - run:
          name: "nx build prismic-webhooks"
          command: |
            yarn nx run prismic-webhooks:build:production

      - persist_to_workspace:
          root: ./
          paths:
            - dist/apps/prismic-webhooks/
            - dist/apps/sitemap/

  build-website:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - restore_cache:
          keys:
            - website-nextjs-{{ checksum "yarn.lock" }}

      - run:
          name: "nx website build"
          command: |
            yarn nx run website:build:production

      - run:
          name: "nx website export"
          command: |
            yarn nx run website:export:production

      - save_cache:
          key: website-nextjs-{{ checksum "yarn.lock" }}
          paths:
            - apps/website/.next/

      - persist_to_workspace:
          root: ./
          paths:
            - apps/website/.next/
            - dist/apps/website/

      - run:
          name: "zip website"
          working_directory: ./dist/apps
          command: |
            zip -r website.zip website/exported

      - store_artifacts:
          path: dist/apps/website.zip
          destination: website.zip

  build-design-system:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: "nx design-system build-storybook"
          command: |
            yarn nx run design-system:build-storybook:production

      - persist_to_workspace:
          root: ./
          paths:
            - dist/storybook/design-system/

      - run:
          name: "zip design-system"
          working_directory: ./dist/storybook
          command: |
            zip -r design-system.zip design-system

      - store_artifacts:
          path: dist/storybook/design-system.zip
          destination: design-system.zip

  test:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: test
          command: |
            yarn test --ci

      - store_test_results:
          path: test-results/

  lint:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: prettier
          command: |
            yarn prettier --check .

      - run:
          name: eslint
          command: |
            mkdir -p test-results/eslint/
            yarn lint:scripts

      - run:
          name: stylelint
          command: |
            mkdir -p test-results/stylelint/
            yarn lint:styles

      - run:
          name: vectors
          command: |
            yarn lint:vectors
            git diff --exit-code "*.svg"

      - store_test_results:
          path: test-results/

  deploy-serverless:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: serverless deploy
          command: |
            yarn serverless deploy

  deploy-website:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-bucket/sync:
          from: ./dist/apps/website/exported
          to: "s3://${DEPLOY_S3_WEBSITE_BUCKET}"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: "cloudfront invalidate: website"
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_WEBSITE_DISTRIBUTION}" \
              --paths "/*"

  deploy-design-system:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-bucket/sync:
          from: ./dist/storybook/design-system
          to: "s3://${DEPLOY_S3_DESIGN_SYSTEM_BUCKET}/"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: "invalidate cloudfront: design system"
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_DESIGN_SYSTEM_DISTRIBUTION}" \
              --paths "/*"

workflows:
  publish:
    jobs:
      - dependencies

      - build-design-system:
          requires:
            - dependencies

      - build-serverless:
          requires:
            - dependencies

      - build-website:
          requires:
            - dependencies

      - test:
          requires:
            - dependencies

      - lint:
          requires:
            - dependencies

      - approval:
          type: approval
          requires:
            - build-design-system
            - build-serverless
            - build-website
            - test
            - lint
          filters:
            branches:
              only:
                - main

      - deploy-serverless:
          context: bashkim-com-prod
          requires:
            - approval

      - deploy-website:
          context: bashkim-com-prod
          requires:
            - approval

      - deploy-design-system:
          context: bashkim-com-prod
          requires:
            - approval
