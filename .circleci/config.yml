---
version: 2.1

executors:
  exec-node:
    working_directory: ~/repo
    docker:
      - image: node:14.17.6

  exec-python:
    working_directory: ~/repo
    docker:
      - image: "circleci/python:3.6"

orbs:
  aws-s3: circleci/aws-s3@3.0.0

jobs:
  build-application:
    executor: exec-node
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-lock-{{ checksum "yarn.lock" }}

      - run:
          name: yarn install
          command: |
            yarn install --frozen-lockfile

      - run:
          name: "yarn build"
          command: |
            yarn build

      - save_cache:
          key: yarn-lock-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
            - packages/application/.next/cache/
            - packages/application/node_modules/
            - packages/config/node_modules/
            - packages/design-system/node_modules/
            - packages/prismic/node_modules/
            - packages/sitemap/node_modules/
            - packages/webhooks/node_modules/

      - persist_to_workspace:
          root: ./
          paths:
            - node_modules/
            - packages/*/node_modules/
            - packages/application/.next/
            - packages/*/dist/
            - packages/*/lib/

  build-design-system:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: "storybook build"
          working_directory: packages/design-system
          command: |
            yarn storybook:build

      - persist_to_workspace:
          root: ./
          paths:
            - packages/design-system/.storybook-static/

  test:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: test
          command: |
            yarn test

      - store_test_results:
          path: test-results/

  lint:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: prettier
          command: |
            npx prettier --check --ignore-unknown .

      - run:
          name: eslint
          command: |
            mkdir -p test-results/eslint/
            npx eslint \
              --format junit \
              --ext .js,.ts,.tsx \
              . \
            > test-results/eslint/junit.xml

      - run:
          name: stylelint
          command: |
            mkdir -p test-results/stylelint/
            npx stylelint \
              --custom-formatter 'node_modules/stylelint-junit-formatter' \
              '**/*.scss' \
              '**/*.css' \
            > test-results/stylelint/junit.xml

      - store_test_results:
          path: test-results/

  deploy:
    executor: exec-node
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: serverless deploy
          command: |
            npx serverless deploy

  synchronize-application:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-s3/sync:
          from: ./packages/application/dist
          to: "s3://${DEPLOY_S3_WEBSITE_BUCKET}"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: invalidate website cloudfront
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_WEBSITE_DISTRIBUTION}" \
              --paths "/*"

  synchronize-design-system:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-s3/sync:
          from: ./packages/design-system/.storybook-static
          to: "s3://${DEPLOY_S3_DESIGN_SYSTEM_BUCKET}/"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: invalidate design system cloudfront
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_DESIGN_SYSTEM_DISTRIBUTION}" \
              --paths "/*"

workflows:
  version: 2

  publish:
    jobs:
      - build-application

      - build-design-system:
          requires:
            - build-application

      - test:
          requires:
            - build-application

      - lint:
          requires:
            - build-application

      - approval:
          type: approval
          requires:
            - build-design-system
            - test
            - lint
          filters:
            branches:
              only:
                - master

      - deploy:
          context: bashkim-com-prod
          requires:
            - approval

      - synchronize-application:
          context: bashkim-com-prod
          requires:
            - approval

      - synchronize-design-system:
          context: bashkim-com-prod
          requires:
            - approval
