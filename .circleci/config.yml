---
version: 2.1

executors:
  exec-node:
    docker:
      - image: cimg/node:20.10.0

  exec-python:
    docker:
      - image: cimg/python:3.11.1

orbs:
  aws-s3: circleci/aws-s3@3.0.0

jobs:
  dependencies:
    executor: exec-node
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-lock-{{ checksum "yarn.lock" }}

      - run:
          name: yarn install
          command: |
            yarn install --frozen-lockfile

      - save_cache:
          key: yarn-lock-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

  build-applications:
    executor: exec-node
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-lock-{{ checksum "yarn.lock" }}
            - website-nextjs-{{ checksum "yarn.lock" }}

      - run:
          name: "build"
          command: |
            yarn build

      - run:
          name: "zip website"
          working_directory: packages/website/
          command: |
            zip -r website.zip out

      - store_artifacts:
          path: packages/website/website.zip
          destination: website.zip

      - persist_to_workspace:
          root: ./
          paths:
            - packages/prismic-webhooks/dist/
            - packages/sitemap/dist/
            - packages/socials-server/dist/
            - packages/website/out/

      - save_cache:
          key: website-nextjs-{{ checksum "yarn.lock" }}
          paths:
            - packages/website/.next/

  build-design-system:
    executor: exec-node
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-lock-{{ checksum "yarn.lock" }}

      - run:
          name: "storybook build"
          command: |
            yarn storybook:build

      - persist_to_workspace:
          root: ./
          paths:
            - packages/design-system/storybook-static/

      - run:
          name: zip
          working_directory: ./packages/design-system/
          command: |
            zip -r design-system.zip storybook-static

      - store_artifacts:
          path: ./packages/design-system/design-system.zip
          destination: design-system.zip

  deploy-website:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-s3/sync:
          from: packages/website/out/
          to: "s3://${DEPLOY_S3_WEBSITE_BUCKET}"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: "cloudfront invalidate: website"
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_WEBSITE_DISTRIBUTION}" \
              --paths "/*"

  deploy-design-system:
    executor: exec-python
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - aws-s3/sync:
          from: packages/design-system/storybook-static/
          to: "s3://${DEPLOY_S3_DESIGN_SYSTEM_BUCKET}/"
          arguments: |
            --cache-control "max-age=86400"

      - run:
          name: "invalidate cloudfront: design system"
          command: |
            aws cloudfront create-invalidation \
              --distribution-id \
                "${DEPLOY_CLOUDFRONT_DESIGN_SYSTEM_DISTRIBUTION}" \
              --paths "/*"

workflows:
  publish:
    jobs:
      - dependencies:
          filters:
            branches:
              only:
                - main

      - build-applications:
          context: bashkim-com-prod
          requires:
            - dependencies

      - build-design-system:
          context: bashkim-com-prod
          requires:
            - dependencies

      - approval:
          type: approval
          requires:
            - build-applications
            - build-design-system

      - deploy-website:
          context: bashkim-com-prod
          requires:
            - approval

      - deploy-design-system:
          context: bashkim-com-prod
          requires:
            - approval
